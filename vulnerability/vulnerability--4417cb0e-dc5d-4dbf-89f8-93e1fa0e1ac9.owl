[

{"@id": "http://docs.oasis-open.org/tac/ns/stix-cve#CVE-2019-12331", "@type": ["http://www.w3.org/2002/07/owl#NamedIndividual", "http://docs.oasis-open.org/cti/ns/stix#Vulnerability"], "http://docs.oasis-open.org/cti/ns/stix/core#description": [{"@value": "PHPOffice PhpSpreadsheet before 1.8.0 has an XXE issue. The XmlScanner decodes the sheet1.xml from an .xlsx to utf-8 if something else than UTF-8 is declared in the header. This was a security measurement to prevent CVE-2018-19277 but the fix is not sufficient. By double-encoding the the xml payload to utf-7 it is possible to bypass the check for the string \u201a<!ENTITY\u2018 and thus allowing for an xml external entity processing (XXE) attack."}], "http://docs.oasis-open.org/cti/ns/stix/core#modified": [{"@value": "2021-03-13T20:11:58.208144Z"}], "http://docs.oasis-open.org/cti/ns/stix/core#created": [{"@value": "2021-03-13T20:11:58.208144Z"}], "http://docs.oasis-open.org/cti/ns/stix/core#spec_version": [{"@value": "2.1"}], "http://docs.oasis-open.org/cti/ns/stix/core#id": [{"@value": "vulnerability--4417cb0e-dc5d-4dbf-89f8-93e1fa0e1ac9"}], "http://docs.oasis-open.org/cti/ns/stix/core#name": [{"@value": "CVE-2019-12331"}], "http://docs.oasis-open.org/cti/ns/stix/core#created_by_ref": [{"@id": "http://docs.oasis-open.org/tac/ns/stix-cve#identity--8ce3f695-d5a4-4dc8-9e93-a65af453a31a"}], "http://docs.oasis-open.org/cti/ns/stix/marking#object_marking_refs": [{"@id": "http://docs.oasis-open.org/tac/ns/stix-cve#marking-definition--62fd3f9b-15f3-4ebc-802c-91fce9536bcf"}]}

]